{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6a35fcd6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive\n"
     ]
    }
   ],
   "source": [
    "n = -5\n",
    "message = \"Negative\" if n >= 0 else \"Positive\"\n",
    "print(message)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ff53c406",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Minor\n"
     ]
    }
   ],
   "source": [
    "age = 17\n",
    "if age >= 30:\n",
    "    print(\"Adult\")\n",
    "elif age > 18 and age < 30:\n",
    "    print(\"Young adult\")\n",
    "else:\n",
    "    print(\"Minor\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b365ab92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[5, [6, 7]]\n",
      "[6, 7]\n",
      "6\n"
     ]
    }
   ],
   "source": [
    "lst = [1, [2, 3], 4, [5, [6, 7]]]\n",
    "print(lst[3])\n",
    "print(lst[3][1])\n",
    "print(lst[3][1][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "3fe7fba2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['tiger', 'dog', 'fox', 'rabbit', 'lion']"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "animals = [\"cat\", \"dog\", \"rabbit\", \"wolf\"]\n",
    "animals.remove(\"wolf\")\n",
    "\n",
    "animals.append(\"lion\")\n",
    "animals.insert(2, \"fox\")\n",
    "animals[0] = \"tiger\"\n",
    "animals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "d98a6288",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "3\n",
      "4\n"
     ]
    }
   ],
   "source": [
    "# for i in range(2, 10):\n",
    "#     print(i)\n",
    "for i in range(2,10):\n",
    "    if i%5==0:\n",
    "        break\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "82a79d2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10%5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "d95a120c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "for i in range(4):\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "10c433d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['apple', 'banana', 'cherry', 'date', 'orange']"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fruits = [\"apple\", \"banana\", \"cherry\", \"date\"]\n",
    "fruits.append(\"orange\")\n",
    "\n",
    "fruits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "8e74add6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10, 50, 300, 1200]\n",
      "1200\n"
     ]
    }
   ],
   "source": [
    "prices = [300, 50, 1200, 10]\n",
    "sorted(prices)\n",
    "print(sorted(prices))\n",
    "print(prices[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "2b1ae80c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['spoon', 'pen']\n"
     ]
    }
   ],
   "source": [
    "office_supplies = [\"pen\", \"paper\", \"stapler\"]\n",
    "kitchen_supplies = [\"fork\", \"knife\", \"spoon\"]\n",
    "combined_list =  kitchen_supplies + office_supplies\n",
    "print(combined_list[2:4])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
